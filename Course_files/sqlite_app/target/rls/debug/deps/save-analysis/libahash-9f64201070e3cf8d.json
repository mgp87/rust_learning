{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4","program":"/Users/julioolivares/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ahash","--edition=2018","/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=9f64201070e3cf8d","-C","extra-filename=-9f64201070e3cf8d","--out-dir","/Users/julioolivares/Development/rust/sqlite_app/target/rls/debug/deps","-L","dependency=/Users/julioolivares/Development/rust/sqlite_app/target/rls/debug/deps","--extern","getrandom=/Users/julioolivares/Development/rust/sqlite_app/target/rls/debug/deps/libgetrandom-4228fb9f4fdf4110.rmeta","--extern","once_cell=/Users/julioolivares/Development/rust/sqlite_app/target/rls/debug/deps/libonce_cell-1cf4343257734e8b.rmeta","--cap-lints","allow","--cfg","feature=\"runtime-rng\"","--cfg","feature=\"folded_multiply\"","--error-format=json","--sysroot","/Users/julioolivares/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/julioolivares/Development/rust/sqlite_app/target/rls/debug/deps/libahash-9f64201070e3cf8d.rmeta"},"prelude":{"crate_id":{"name":"ahash","disambiguator":[18336285319435986821,10032464161417928077]},"crate_root":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src","external_crates":[{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17161976177339802527,9637120080719870273]}},{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12784072134307519025,4657485898025748013]}},{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8860544973196061204,9932137894390183628]}},{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","num":4,"id":{"name":"alloc","disambiguator":[15484098214765895148,4360652648143560453]}},{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","num":5,"id":{"name":"once_cell","disambiguator":[8291143105727046633,1861661694913792002]}},{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","num":6,"id":{"name":"getrandom","disambiguator":[12610199783266679260,3317014097058970208]}},{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","num":7,"id":{"name":"cfg_if","disambiguator":[6669231008839721604,5451692867657612098]}},{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","num":8,"id":{"name":"libc","disambiguator":[6375723736184788575,10314297961763573365]}}],"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":0,"byte_end":8065,"line_start":1,"line_end":253,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":896},"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":1990,"byte_end":1997,"line_start":55,"line_end":55,"column_start":31,"column_end":38},"alias_span":null,"name":"AHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":905},"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":2028,"byte_end":2039,"line_start":56,"line_end":56,"column_start":30,"column_end":41},"alias_span":null,"name":"RandomState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":2069,"byte_end":2079,"line_start":58,"line_end":58,"column_start":28,"column_end":38},"alias_span":null,"name":"CallHasher","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":0,"byte_end":8065,"line_start":1,"line_end":253,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":44},{"krate":0,"index":84},{"krate":0,"index":106},{"krate":0,"index":167},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":215}],"decl_id":null,"docs":" AHash is a hashing algorithm is intended to be a high performance, (hardware specific), keyed hash function.\n This can be seen as a DOS resistant alternative to `FxHash`, or a fast equivalent to `SipHash`.\n It provides a high speed hash algorithm, but where the result is not predictable without knowing a Key.\n This allows it to be used in a `HashMap` without allowing for the possibility that an malicious user can\n induce a collision.","sig":null,"attributes":[{"value":"/ AHash is a hashing algorithm is intended to be a high performance, (hardware specific), keyed hash function.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":0,"byte_end":112,"line_start":1,"line_end":1,"column_start":1,"column_end":113}},{"value":"/ This can be seen as a DOS resistant alternative to `FxHash`, or a fast equivalent to `SipHash`.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":113,"byte_end":212,"line_start":2,"line_end":2,"column_start":1,"column_end":100}},{"value":"/ It provides a high speed hash algorithm, but where the result is not predictable without knowing a Key.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":213,"byte_end":320,"line_start":3,"line_end":3,"column_start":1,"column_end":108}},{"value":"/ This allows it to be used in a `HashMap` without allowing for the possibility that an malicious user can","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":321,"byte_end":429,"line_start":4,"line_end":4,"column_start":1,"column_end":109}},{"value":"/ induce a collision.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":430,"byte_end":453,"line_start":5,"line_end":5,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":454,"byte_end":457,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # How aHash works","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":458,"byte_end":479,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":480,"byte_end":483,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ aHash uses the hardware AES instruction on x86 processors to provide a keyed hash function.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":484,"byte_end":579,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ aHash is not a cryptographically secure hash.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":580,"byte_end":629,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":630,"byte_end":633,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":634,"byte_end":647,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":648,"byte_end":655,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use ahash::{AHasher, RandomState};","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":656,"byte_end":694,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":695,"byte_end":729,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":730,"byte_end":733,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut map: HashMap<i32, i32, RandomState> = HashMap::default();","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":734,"byte_end":803,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ map.insert(12, 34);","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":804,"byte_end":827,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":828,"byte_end":835,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ For convinence wrappers called `AHashMap` and `AHashSet` are also provided.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":836,"byte_end":915,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ These to the same thing with slightly less typing.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":916,"byte_end":970,"line_start":21,"line_end":21,"column_start":1,"column_end":55}},{"value":"/ ```ignore","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":971,"byte_end":984,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ use ahash::AHashMap;","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":985,"byte_end":1009,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":1010,"byte_end":1013,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut map: AHashMap<i32, i32> = AHashMap::with_capacity(4);","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":1014,"byte_end":1079,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ map.insert(12, 34);","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":1080,"byte_end":1103,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/ map.insert(56, 78);","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":1104,"byte_end":1127,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":1128,"byte_end":1135,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"deny(clippy :: correctness, clippy :: complexity, clippy :: perf)","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":1136,"byte_end":1199,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"allow(clippy :: pedantic, clippy :: cast_lossless, clippy ::\n        unreadable_literal)","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":1200,"byte_end":1278,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"no_std","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":1329,"byte_end":1335,"line_start":31,"line_end":31,"column_start":51,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":896},"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":14058,"byte_end":14065,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"AHasher","qualname":"::fallback_hash::AHasher","value":"AHasher {  }","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899}],"decl_id":null,"docs":" A `Hasher` for hashing an arbitrary stream of bytes.","sig":null,"attributes":[{"value":"/ A `Hasher` for hashing an arbitrary stream of bytes.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":13564,"byte_end":13620,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":13621,"byte_end":13624,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Instances of [`AHasher`] represent state that is updated while hashing data.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":13625,"byte_end":13705,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":13706,"byte_end":13709,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Each method updates the internal state based on the new data provided. Once","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":13710,"byte_end":13789,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ all of the data has been provided, the resulting hash can be obtained by calling","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":13790,"byte_end":13874,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ `finish()`","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":13875,"byte_end":13889,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":13890,"byte_end":13893,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [Clone] is also provided in case you wish to calculate hashes for two different items that","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":13894,"byte_end":13988,"line_start":20,"line_end":20,"column_start":1,"column_end":95}},{"value":"/ start with the same data.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":13989,"byte_end":14018,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":14019,"byte_end":14022,"line_start":22,"line_end":22,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":14295,"byte_end":14308,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<AHasher>::new_with_keys","value":"pub fn new_with_keys(u128, u128) -> AHasher","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hasher keyed to the provided key.\n","sig":null,"attributes":[{"value":"/ Creates a new hasher keyed to the provided key.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":14147,"byte_end":14198,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":14203,"byte_end":14212,"line_start":32,"line_end":32,"column_start":5,"column_end":14}},{"value":"allow(dead_code)","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":14217,"byte_end":14236,"line_start":33,"line_end":33,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":905},"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":39116,"byte_end":39127,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"RandomState","qualname":"::random_state::RandomState","value":"RandomState {  }","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909}],"decl_id":null,"docs":" Provides a [Hasher] factory. This is typically used (e.g. by [HashMap]) to create\n [AHasher]s in order to hash the keys of the map. See `build_hasher` below.","sig":null,"attributes":[{"value":"/ Provides a [Hasher] factory. This is typically used (e.g. by [HashMap]) to create","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":38776,"byte_end":38861,"line_start":81,"line_end":81,"column_start":1,"column_end":86}},{"value":"/ [AHasher]s in order to hash the keys of the map. See `build_hasher` below.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":38862,"byte_end":38940,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":38941,"byte_end":38944,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [build_hasher]: ahash::","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":38945,"byte_end":38972,"line_start":84,"line_end":84,"column_start":1,"column_end":28}},{"value":"/ [Hasher]: std::hash::Hasher","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":38973,"byte_end":39004,"line_start":85,"line_end":85,"column_start":1,"column_end":32}},{"value":"/ [BuildHasher]: std::hash::BuildHasher","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":39005,"byte_end":39046,"line_start":86,"line_end":86,"column_start":1,"column_end":42}},{"value":"/ [HashMap]: std::collections::HashMap","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":39047,"byte_end":39087,"line_start":87,"line_end":87,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":39451,"byte_end":39454,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<RandomState>::new","value":"pub fn new() -> RandomState","parent":null,"children":[],"decl_id":null,"docs":" Use randomly generated keys\n","sig":null,"attributes":[{"value":"/ Use randomly generated keys","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":39394,"byte_end":39425,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":39430,"byte_end":39439,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":40817,"byte_end":40830,"line_start":141,"line_end":141,"column_start":12,"column_end":25},"name":"generate_with","qualname":"<RandomState>::generate_with","value":"pub fn generate_with(u64, u64, u64, u64) -> RandomState","parent":null,"children":[],"decl_id":null,"docs":" Allows for supplying seeds, but each time it is called the resulting state will be different.\n This is done using a static counter, so it can safely be used with a fixed keys.\n","sig":null,"attributes":[{"value":"/ Allows for supplying seeds, but each time it is called the resulting state will be different.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":40605,"byte_end":40702,"line_start":138,"line_end":138,"column_start":5,"column_end":102}},{"value":"/ This is done using a static counter, so it can safely be used with a fixed keys.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":40707,"byte_end":40791,"line_start":139,"line_end":139,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":40796,"byte_end":40805,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":42342,"byte_end":42352,"line_start":186,"line_end":186,"column_start":18,"column_end":28},"name":"with_seeds","qualname":"<RandomState>::with_seeds","value":"pub const fn with_seeds(u64, u64, u64, u64) -> RandomState","parent":null,"children":[],"decl_id":null,"docs":" Allows for explicitly setting the seeds to used.\n","sig":null,"attributes":[{"value":"/ Allows for explicitly setting the seeds to used.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":42258,"byte_end":42310,"line_start":184,"line_end":184,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":42315,"byte_end":42324,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":178},"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":46360,"byte_end":46370,"line_start":31,"line_end":31,"column_start":11,"column_end":21},"name":"CallHasher","qualname":"::specialize::CallHasher","value":"CallHasher","parent":null,"children":[{"krate":0,"index":179}],"decl_id":null,"docs":" Provides a way to get an optimized hasher for a given data type.\n Rather than using a Hasher generically which can hash any value, this provides a way to get a specialized hash\n for a specific type. So this may be faster for primitive types.\n # Example\n ```\n use std::hash::BuildHasher;\n use ahash::RandomState;\n use ahash::CallHasher;","sig":null,"attributes":[{"value":"/ Provides a way to get an optimized hasher for a given data type.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":45851,"byte_end":45919,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ Rather than using a Hasher generically which can hash any value, this provides a way to get a specialized hash","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":45920,"byte_end":46034,"line_start":18,"line_end":18,"column_start":1,"column_end":115}},{"value":"/ for a specific type. So this may be faster for primitive types.","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":46035,"byte_end":46102,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ # Example","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":46103,"byte_end":46116,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":46117,"byte_end":46124,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use std::hash::BuildHasher;","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":46125,"byte_end":46156,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/ use ahash::RandomState;","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":46157,"byte_end":46184,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/ use ahash::CallHasher;","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":46185,"byte_end":46211,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":46212,"byte_end":46215,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let hash_builder = RandomState::new();","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":46216,"byte_end":46258,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/ //...","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":46259,"byte_end":46268,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ let value = 17;","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":46269,"byte_end":46288,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/ let hash = u32::get_hash(&value, &hash_builder);","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":46289,"byte_end":46341,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":46342,"byte_end":46349,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":46380,"byte_end":46388,"line_start":32,"line_end":32,"column_start":8,"column_end":16},"name":"get_hash","qualname":"::specialize::CallHasher::get_hash","value":"pub fn get_hash<H: Hash + ?Sized, B: BuildHasher>(&H, &B) -> u64","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":12,"kind":"Inherent","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":14133,"byte_end":14140,"line_start":30,"line_end":30,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":20128,"byte_end":20135,"line_start":146,"line_end":146,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":39249,"byte_end":39260,"line_start":96,"line_end":96,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":39376,"byte_end":39387,"line_start":102,"line_end":102,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":42523,"byte_end":42534,"line_start":191,"line_end":191,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":42628,"byte_end":42639,"line_start":198,"line_end":198,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":46522,"byte_end":46523,"line_start":36,"line_end":36,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":3056,"byte_end":3063,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":4510,"byte_end":4511,"line_start":131,"line_end":131,"column_start":41,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":14133,"byte_end":14140,"line_start":30,"line_end":30,"column_start":6,"column_end":13},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/fallback_hash.rs","byte_start":20128,"byte_end":20135,"line_start":146,"line_end":146,"column_start":17,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":896},"to":{"krate":1,"index":9021}},{"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":39249,"byte_end":39260,"line_start":96,"line_end":96,"column_start":21,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":905},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":39376,"byte_end":39387,"line_start":102,"line_end":102,"column_start":6,"column_end":17},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":42523,"byte_end":42534,"line_start":191,"line_end":191,"column_start":18,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":905},"to":{"krate":1,"index":2810}},{"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/random_state.rs","byte_start":42628,"byte_end":42639,"line_start":198,"line_end":198,"column_start":22,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":905},"to":{"krate":1,"index":9052}},{"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/specialize.rs","byte_start":46522,"byte_end":46523,"line_start":36,"line_end":36,"column_start":24,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":183},"to":{"krate":0,"index":178}},{"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":3056,"byte_end":3063,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":896},"to":{"krate":1,"index":2810}},{"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":4196,"byte_end":4207,"line_start":120,"line_end":120,"column_start":34,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":9052},"to":{"krate":0,"index":208}},{"span":{"file_name":"/Users/julioolivares/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.4/src/lib.rs","byte_start":4510,"byte_end":4511,"line_start":131,"line_end":131,"column_start":41,"column_end":42},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":216},"to":{"krate":0,"index":208}}]}